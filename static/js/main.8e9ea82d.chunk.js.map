{"version":3,"sources":["features/inventorySlice.js","components/Searchbar/index.jsx","components/Inventory/item.jsx","components/Inventory/index.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["inventorySlice","createSlice","name","initialState","value","Array","from","keys","map","item","ID","Vehicle","faker","vehicle","Type","type","Fuel","fuel","Color","color","isEdit","filter","reducers","searchVehicle","state","action","payload","setVehicle","setEdit","deleteVehicle","actions","selectInventory","inventory","includes","Searchbar","props","dispatch","useDispatch","useState","searchName","setSearchName","inventoryLength","length","noun","className","onSubmit","e","preventDefault","htmlFor","id","placeholder","onChange","target","Item","setState","newState","setNewState","handleValueChange","onClick","Inventory","inventoryList","page","setPage","pages","buttons","i","push","index","App","useSelector","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","inventoryReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.8e9ea82d.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\nimport faker from \"faker\"\r\n\r\nexport const inventorySlice = createSlice({\r\n    name: \"inventory\",\r\n    initialState: {\r\n        value:Array.from(Array(30).keys()).map(item=>({\r\n            ID: item+1,\r\n            Vehicle: faker.vehicle.vehicle(),\r\n            Type: faker.vehicle.type(),\r\n            Fuel: faker.vehicle.fuel(),\r\n            Color: faker.vehicle.color(),\r\n            isEdit: false,\r\n        })),\r\n        filter:\"\",\r\n    },        \r\n    reducers: {\r\n        searchVehicle: (state, action)=>{\r\n            return {...state, filter:action.payload};\r\n        },\r\n        setVehicle:(state, action)=>{\r\n            return {...state, value: state.value.map(item=>{\r\n                if (item.ID===action.payload.ID){\r\n                    return {...action.payload, isEdit:!item.isEdit};\r\n                } \r\n                return item;\r\n            })};\r\n        },\r\n        setEdit:(state, action)=>{\r\n            return {...state, value: state.value.map(item=>{\r\n                if (item.ID===action.payload.ID){\r\n                    return {...item, isEdit:!item.isEdit};\r\n                } \r\n                return item;\r\n            })};\r\n        },\r\n        deleteVehicle:(state, action)=>{\r\n            return {...state, value: state.value.filter(item=>item.ID!==action.payload.ID)}\r\n        }\r\n    }\r\n});\r\n\r\nexport const {searchVehicle, setEdit, setVehicle, deleteVehicle} = inventorySlice.actions;\r\n\r\nexport const selectInventory = state=> state.inventory.value.filter(item=>item[\"Vehicle\"].includes(state.inventory.filter));\r\n\r\nexport default inventorySlice.reducer;","import \"./index.css\"\r\nimport {searchVehicle} from \"../../features/inventorySlice\"\r\nimport {useState} from \"react\"\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nfunction Searchbar(props){\r\n  const dispatch = useDispatch();\r\n  const [searchName, setSearchName] = useState('');\r\n   \r\n  const inventoryLength= props.length;\r\n  const noun = inventoryLength>1?\"vehicles\":\"vehicle\";\r\n\r\n    function submitHandle(e){\r\n      e.preventDefault();\r\n      dispatch(searchVehicle(searchName));\r\n      setSearchName('');\r\n    }\r\n\r\n    return (\r\n      <form className=\"form-group\" onSubmit={submitHandle}>                 \r\n        <div>\r\n          <label htmlFor=\"searchText\">Found {inventoryLength} {noun}</label>\r\n          <br></br>\r\n          <div>\r\n            <div>\r\n              <input type=\"text\" id=\"searchText\" placeholder=\"Enter vehicle name here\" \r\n              value={searchName} onChange={e=>{setSearchName(e.target.value);}}/>      \r\n            </div>  \r\n            <div>\r\n            <button type=\"submit\">Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Searchbar;","import {setEdit, setVehicle, deleteVehicle} from \"../../features/inventorySlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport \"./index.css\"\r\nexport default function Item(props){\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        \"Vehicle\":props.value.Vehicle,\r\n        \"Type\":props.value.Type,\r\n        \"Fuel\":props.value.Fuel,\r\n        \"Color\":props.value.Color,\r\n    });\r\n\r\n    const [newState, setNewState] = useState({\r\n        \"Vehicle\":props.value.Vehicle,\r\n        \"Type\":props.value.Type,\r\n        \"Fuel\":props.value.Fuel,\r\n        \"Color\":props.value.Color,\r\n    });\r\n    function handleValueChange(e){\r\n        setNewState({...newState, [e.target.name]:e.target.value});\r\n    }\r\n    if (props.value['isEdit']===false) {\r\n        return (<div className=\"flex-container flex-content\" >\r\n                    <div className=\"flex-item\">{props.value[\"ID\"]}</div>\r\n                            <div className=\"flex-item\">{state[\"Vehicle\"]}</div>    \r\n                            <div className=\"flex-item\">{state[\"Type\"]}</div>\r\n                            <div className=\"flex-item\">{state[\"Fuel\"]}</div>\r\n                            <div className=\"flex-item\">{state[\"Color\"]}</div>                    \r\n                            <div className=\"flex-item\">\r\n                            <button type=\"button\" onClick={()=>{\r\n                                dispatch(setEdit({ID: props.value[\"ID\"]}));\r\n                            }}>Edit</button>\r\n                        </div>\r\n                        <div className=\"flex-item\" onClick={()=>dispatch(deleteVehicle({ID: props.value[\"ID\"]}))}>\r\n                            <button type=\"button\">Delete</button>       \r\n                        </div>     \r\n        </div>)\r\n    }\r\n    else {\r\n        return (<div className=\"flex-container flex-content\" >\r\n                <div className=\"flex-item\">{props.value[\"ID\"]}</div>  \r\n                <div className=\"flex-item\">\r\n                    <input type=\"text\" value={newState[\"Vehicle\"]} name=\"Vehicle\" onChange={(e)=>{\r\n                            handleValueChange(e);\r\n                        }}/>\r\n                </div>    \r\n                <div className=\"flex-item\">\r\n                    <input type=\"text\" value={newState[\"Type\"]} name=\"Type\" onChange={(e)=>{\r\n                            handleValueChange(e);\r\n                        }}/>\r\n                </div>\r\n                <div className=\"flex-item\">\r\n                    <input type=\"text\" value={newState[\"Fuel\"]} name=\"Fuel\" onChange={(e)=>{\r\n                            handleValueChange(e);}}/>\r\n                </div>\r\n                <div className=\"flex-item\">\r\n                    <input type=\"text\" value={newState[\"Color\"]} name=\"Color\" onChange={(e)=>{\r\n                            handleValueChange(e);}}/>\r\n                </div>                    \r\n                <div className=\"flex-item\">\r\n                <button type=\"button\" onClick={()=>{\r\n                    setState(newState);\r\n                    dispatch(setVehicle({...newState, ID: props.value[\"ID\"]}));\r\n                }}>Confirm</button>\r\n            </div>\r\n            <div className=\"flex-item\">\r\n                <button type=\"button\" onClick={()=>{\r\n                    dispatch(setEdit({ID: props.value[\"ID\"]}));\r\n                }}>Cancel</button>       \r\n            </div>      \r\n            </div>\r\n            );\r\n    }\r\n}","import Item from \"./item.jsx\"\r\nimport {createSelector} from \"reselect\"\r\nimport {useState} from \"react\"\r\nimport {selectInventory} from \"../../features/inventorySlice\"\r\nimport { connect } from 'react-redux'\r\n\r\nexport default function Inventory(props){   \r\n    const itemsPerPage = 5, length = props.inventoryList.length;    \r\n    const [page, setPage] = useState(0);\r\n    const pages = length / itemsPerPage;\r\n    const buttons = [];\r\n\r\n    for (let i=0; i<pages; i++) {\r\n        buttons.push(<button key={i} onClick={()=>setPage(i)}>{i+1}&nbsp;&nbsp;</button>);\r\n    }\r\n    if (page>0 && page >= pages) {\r\n        setPage(page-1);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"flex-item\">ID</div>\r\n                <div className=\"flex-item\">Vehicle</div>\r\n                <div className=\"flex-item\">Type</div>\r\n                <div className=\"flex-item\">Fuel</div>\r\n                <div className=\"flex-item\">Color</div>      \r\n                <div className=\"flex-item\"></div>\r\n                <div className=\"flex-item\"></div>      \r\n            </div>\r\n            {props.inventoryList.filter((value, index)=>\r\n                index>=itemsPerPage*page && index<itemsPerPage*(page+1)\r\n            ).map(inventory=>{                \r\n                    return (<Item key={inventory.ID} value={inventory}/>);\r\n                })}\r\n\r\n            <div>\r\n                {buttons}\r\n               \r\n            </div>\r\n  \r\n        </div>\r\n    );\r\n}\r\n","import './index.css';\r\nimport {Searchbar} from \"./components\";\r\nimport {Inventory} from \"./components\";\r\nimport {useSelector} from \"react-redux\"\r\nimport {selectInventory} from\"./features/inventorySlice\"\r\n\r\nfunction App() {\r\n\r\n  const inventoryList = useSelector(selectInventory);  \r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Inventory</h1>\r\n      \r\n      <Searchbar length={inventoryList.length}/>\r\n      <Inventory inventoryList={inventoryList}/>\r\n            \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport inventoryReducer from '../features/inventorySlice'\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        inventory:inventoryReducer,\r\n    },\r\n});\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./app/store\"\r\n\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}